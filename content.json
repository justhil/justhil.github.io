{"meta":{"title":"justhil's blog","subtitle":"","description":"写点小事","author":"justhil","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Exl2模型加载器tabbyAPI部署","text":"windows下 Exl2模型加载器tabbyAPI部署 准备工作一块支撑得起你想使用模型消耗的显卡 16g以上的内存 Python 3.11 tabbyAPI的源码 你可以使用[git](git clone https://github.com/theroyallab/tabbyAPI) 也可以网页下载源码压缩包解压 加载模型前步骤双击start.bat，根据屏幕提示选择选项。 加载模型你可以在项目根目录下找到config.yml与config_sample.yml,如果前者为空可以复制后者内容至config.yml. 以下为文件内重要部分示例,使用搜索功能快速定位修改,其余保持默认即可. 123456789101112131415161718 # 主机 IP # 使用 0.0.0.0 可在所有网络适配器上开放服务 host: 127.0.0.1 # 端口号 port: XXXX # 关闭密匙认证 本地使用推荐关闭 公网使用务必开启 disable_auth: XXXX # 模型查找目录 根目录下的目录直接填写目录名 model_dir: XXXX # 加载的模型 # 必填：启动时加载模型必须填写此项 model_name: XXXX # 缓存模式 # 可选值: &#x27;FP16&#x27;, &#x27;Q8&#x27;, &#x27;Q6&#x27;, &#x27;Q4&#x27; #推荐Q4最省显存 cache_mode: XXXX max_seq_len: 最大上下文长度 越大上下文越大越占显存chunk_size:处理上下文的速度 越大越快越占显存 关于模型存放格式默认目录为根目录下的models文件夹，从hf站下载的模型请按照根目录&gt;&gt;models&gt;&gt;模型名称文件夹&gt;&gt;模型本体与其他文件的形式放好 启动！！再次双击start.bat等待加载完成 关于接入酒馆tabbyAPI使用OpenAI API 所以你可以使用http://localhost:xxxx/v1作为API URL 关于报错如果出现诸如out of memory等提示则是显存不足,可以通过减小max_seq_len和chunk_size减小显存占用.","path":"2024/11/11/Exl2模型加载器tabbyAPI部署/","date":"11-11","excerpt":"","tags":[{"name":"Exl2,tabbyAPI,语言模型","slug":"Exl2-tabbyAPI-语言模型","permalink":"http://example.com/tags/Exl2-tabbyAPI-%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B/"}]},{"title":"华农校园网指南","text":"华农校园网折腾指南先上单网口网速图 再上单网口加wifi网速图 首先准备可以刷openwrt的路由器并在编译固件时加入 1mentohust luci ua2f luci-app-ua2f iptables-mod-filter iptables-mod-ipopt iptables-mod-u32 iptables-mod-conntrack-extra kmod-ipt-u32 kmod-ipt-ipopt luci-app-mwan3 先说叠网速网口设置先网线接上路由器wan口 进入openwrt后进入mentohust Username（账号）处填写学号@有线1x上网 Password填校园网密码（默认是学号） 注意Interfaces（接口）填wan口的物理接口 高级设置默认就好，然后开始认证 WiFi设置注意大部分openwrt默认的软件包中使用的都是wpad的精简版没有wpa2-eap协议所以在编译时需要更改为（wpad） 你🐉的wifi有两种认证方式，没有1x后缀的为网页认证，有1x后缀的是可以预先认证的（wpa2-eap） 点击radio1(5g)的scan(扫描)连接SCAUNET_1x 分配network为wwan identity为学号password是密码（默认是学号） 连接后放一边备用 负载均衡 看图 双线叠加 再说破解连接设备限制先人的智慧EOYOHOO&#x2F;Campus-network: 使用openwrt路由过校园网多设备检测（非破解） （宿舍共网） (github.com) 已知❀🐉使用的不是基于 IPv4 数据包包头内的 Identification 字段的检测 所以不用装kmod-rkp-ipid，这段规则 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53iptables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53# 通过 rkp-ipid 设置 IPID# 若没有加入rkp-ipid模块，此部分不需要加入iptables -t mangle -N IPID_MODiptables -t mangle -A FORWARD -j IPID_MODiptables -t mangle -A OUTPUT -j IPID_MODiptables -t mangle -A IPID_MOD -d 0.0.0.0/8 -j RETURNiptables -t mangle -A IPID_MOD -d 127.0.0.0/8 -j RETURN#由于本校局域网是A类网，所以我将这一条注释掉了，具体要不要注释结合你所在的校园网# iptables -t mangle -A IPID_MOD -d 10.0.0.0/8 -j RETURNiptables -t mangle -A IPID_MOD -d 172.16.0.0/12 -j RETURNiptables -t mangle -A IPID_MOD -d 192.168.0.0/16 -j RETURNiptables -t mangle -A IPID_MOD -d 255.0.0.0/8 -j RETURNiptables -t mangle -A IPID_MOD -j MARK --set-xmark 0x10/0x10# 防时钟偏移检测iptables -t nat -N ntp_force_localiptables -t nat -I PREROUTING -p udp --dport 123 -j ntp_force_localiptables -t nat -A ntp_force_local -d 0.0.0.0/8 -j RETURNiptables -t nat -A ntp_force_local -d 127.0.0.0/8 -j RETURNiptables -t nat -A ntp_force_local -d 192.168.0.0/16 -j RETURNiptables -t nat -A ntp_force_local -s 192.168.0.0/16 -j DNAT --to-destination 192.168.1.1# 通过 iptables 修改 TTL 值 数字为需要的修改的ttl值iptables -t mangle -A POSTROUTING -j TTL --ttl-set 64# iptables 拒绝 AC 进行 Flash 检测iptables -I FORWARD -p tcp --sport 80 --tcp-flags ACK ACK -m string --algo bm --string &quot; src=\\&quot;http://1.1.1.&quot; -j DROP 中的 1234567891011# 若没有加入rkp-ipid模块，此部分不需要加入iptables -t mangle -N IPID_MODiptables -t mangle -A FORWARD -j IPID_MODiptables -t mangle -A OUTPUT -j IPID_MODiptables -t mangle -A IPID_MOD -d 0.0.0.0/8 -j RETURNiptables -t mangle -A IPID_MOD -d 127.0.0.0/8 -j RETURN 不用加入！ 至此完全体","path":"2024/10/22/华农校园网指南/","date":"10-22","excerpt":"","tags":[]},{"title":"Welcome!","text":"本站作为个人网站部分创作内容为个人所有转载请标明出处！","path":"2024/10/13/hello-world/","date":"10-13","excerpt":"","tags":[]}],"categories":[],"tags":[{"name":"Exl2,tabbyAPI,语言模型","slug":"Exl2-tabbyAPI-语言模型","permalink":"http://example.com/tags/Exl2-tabbyAPI-%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B/"}]}